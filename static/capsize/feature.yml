openapi: "3.0.0"

info:

  title: "Capsize Feature API"
  version: "0.2"
  description: |

    Some stuff

  contact:
    name: Oceanicsdotio
    url: http://www.oceanics.io
    email: business@oceanics.io

  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

externalDocs:

  description: See the capsize repository for more information
  url: https://github.com/oceanicsdotio/capsize

x-tagGroups:

  - name: CAPSIZE API
    tags: [ Render ]

tags:

  - name: Render
    x-displayName: Render
    description: |
      Anti-grain graphics

servers:
- url: https://capsize.oceanics.io/{basePath}
  description: Production API server
  variables:
    basePath:
      default: api

paths:



  /render:

    post:

      tags: [ Image ]
      summary: Render
      operationId: capsize.feature.functions.render
      description: |
        Create PNG images from data sources.
        The service call methods from the `matplotlib` library,
        which uses the anti-grain graphics backend (`AGG`). The images are portable network graphics (`.png`)
        by default, but `.pdf` and `.tiff` are available for print media.

      requestBody:

        description: | 
          Image request

        content:
          application/json:
            schema:
              type: object
              description: | 
                Image function request. The body contains style information
                as well as the data payload. 

              properties:

                labels:
                  type: object
                  description: |
                    Labels for orthogonal axes
                  nullable: true
                  properties:
                    x:
                      type: string
                      nullable: true
                    y:
                      type: string
                      nullable: true

                style:
                  type: object
                  nullable: true
                  description: |
                    Style is used change the appearance of the rendered image.

                  properties:

                    template:
                      type: string
                      enum: [dark, light]
                      default: dark
                      description: |
                        Select between light and dark templates depending on whether the image is intended for display
                        on a screen or for printed media.

                    bg:
                      type: string
                      default: black
                      description: |
                        Override the default background color for the chosen or default template. Dark themes have a `black`
                        background by default, and light themes have a `white` background. Use this to match the background
                        color when embedding in a web page. This can also be transparent for image compositing.

                    contrast:
                      type: string
                      default: white
                      description: |
                        Contrast color for rendering over background.

                    flag:
                      type: string
                      default: red
                      description: |
                        Highlight color for marking selected or masked data.

                    label:
                      type: string
                      description: |
                        Color for text and labels. The default is the same as the `contrast` color.

                    dpi:
                      type: integer
                      default: 150
                      minimum: 90
                      maximum: 300
                      description: |
                        Image resolution. Be careful, `dpi=300` images can be very large.

                    format:
                      type: string
                      enum: [png, pdf, tiff]
                      default: png
                      description: |
                        Image file format. Only `png` is available through the API.

                    alpha:
                      type: number
                      format: float
                      default: 1.0
                      maximum: 1.0
                      minimum: 0.0
                      description: |
                        Transparency of drawn objects. Useful for rendering Monte Carlo simulations.

                    padding:
                      type: array
                      minLength: 4
                      maxLength: 4
                      items:
                        type: number
                        format: float
                      default: [0.1, 0.2, 0.05, 0.1]
                      description: |
                        Content padding from edges of image to make room for labels and title.

                    marker:
                      type: integer
                      default: 1
                      description: |
                        Size of markers if rendering scatter plots or points on a map

                    font:
                      type: integer
                      default: 10
                      description: |
                        Font size

                    text:
                      type: number
                      format: float
                      default: 1.0
                      description: |
                        Size of labels relative to font size.

                    width:
                      type: number
                      format: float
                      default: 6.5
                      description: |
                        Width of image in inches

                    height:
                      type: number
                      format: float
                      description: |
                        Height of image in inches

                data:
                  type: array
                  items:
                    type: object
                              
                extent:

                  title: extent
                  type: object
                  nullable: true
                  description: |

                    Spatiotemporal extent of a data `Collection`. Contains a 2 or 3-D `spatial` extent, and a `temporal`
                    interval.

                  properties:

                    spatial:
                      type: array
                      minLength: 4
                      maxLength: 6
                      nullable: true
                      items:
                        type: number
                        format: float

                    temporal:
                      type: string
                      nullable: true
                      description: ISO format timestamp interval

                args:
                  title: arguments
                  type: object
                  nullable: true

      responses:
        '200':
          description: Image reference
          content:
            image/png:
              schema:
                type: string
                format: binary
