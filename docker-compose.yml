version: "3.4"

networks:
  oceanics:
    driver: bridge

services:

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d:ro
      - ./openapi:/openapi
    depends_on:
      - neo4j
      - bathysphere-graph
    networks:
      - oceanics
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:443"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  neo4j:
    build:
      context: .
      dockerfile: config/dockerfile-neo4j-graphql
    image: oceanicsdotio/neo4j
    ports:
      - 7474:7474 # HTTP
      - 7473:7473 # HTTPS
      - 7687:7687 # BOLT
    environment:
      - NEO4J_dbms_security_auth__max__failed__attempts=6
      - NEO4J_dbms_memory_pagecache_size=200M
      - NEO4J_dbms_memory_heap_maxSize=500M
#    volumes:
#      - ${GRAPHDB:-./data/neo4j}:/data
#      - ./logs/neo4j/:/logs
#      - ./data/import:/var/lib/neo4j/import
    networks:
      - oceanics
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:7474"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  bathysphere-graph:
    build:
      context: .
      dockerfile: config/dockerfile-bathysphere-graph
    image: oceanicsdotio/bathysphere-graph
    ports:
      - 5000:5000
    env_file:
      - ./config/graph.env
    environment:
      - ADMIN
      - ADMIN_PASS
      - API_KEY
      - HOST
      - EMAIL_ACCT
      - EMAIL_KEY
      - EMAIL_SERVER
      - EMAIL_PORT
      - REPLY_TO
      - SECRET
      - PORT
      - BASE_PATH
    networks:
      - oceanics
    volumes:
      - ./src:/src
      - ./logs:/logs
    depends_on:
      - neo4j
