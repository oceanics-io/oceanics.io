openapi: "3.0.0"

paths:

  /faas/streams:

    get:
      tags: [Datastreams]
      summary: Datastreams
      description: |

        Get `Datastreams` of `Things`. A instrument deployment will measure many processes, both during environmental
        sampling, and health checks on power and communication systems.

        Time domain filtering is done using `start` with `end`.

      operationId: goodbuoy.handlers.get_datastreams

      parameters:

        - name: start
          in: query
          description: Start time for range selection.
          schema:
            type: string
            format: date-time

        - name: end
          in: query
          description: End time for range selection.
          schema:
            type: string
            format: date-time

        - name: observations
          in: query
          description: |
            The `observations` option by itself will return the last rows collected, or in combination with
            `start` and `end` will act as span for selecting `Observations`.

          schema:
            type: integer
            format: int32

        - name: fields
          in: query
          description: |
            The names of the fields to return. If these are unknown, the service will attempt to auto-correct them.

          schema:
            type: array
            items:
              type: string

        - name: observedProperties
          in: query
          description: |
            References to `ObservedProperties` can be supplied in place of or in addition to `fields`.
          schema:
            type: array
            items:
              type: integer

        - name: statistics
          in: query
          description: |
             Additional quantitative and qualitative information is appended to the response if `statistics=true`.
          schema:
            type: boolean
            default: false

        - name: orientation
          in: query
          description: |
            Depending on the application, you may want
            to receive JSON data as rows or columns. A `row` is useful for streaming data into a simulation model,
            training multiple regression or neural network models, or updating process controllers.

            The `column` options for `orientation` is the default, and returns `Datastreams` as arrays of
            `Observations` belonging to a single `ObservedProperty`.
          schema:
            type: string
            enum: [row, column]
            default: column

      responses:
        '200':
          description: Datastreams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "https://graph.oceanics.io/api.yml#/components/schemas/Datastream"


components:

  schemas:

    SatlanticThing:
      allOf:
      - $ref: "https://graph.oceanics.io/api.yml#/components/schemas/Thing"
      - type: object
        properties:
          externalId:
            description: External identifier
            type: integer
            format: int32
            minimum: 1

    Schedule:
      type: object
      properties:
        scheduleCreationProgram:
          type: string
        scheduleCreationOperator:
          type: string
        scheduleCreationTime:
          type: string
          format: date-time

        storxSettings:
          type: object
          properties:
            type:
              type: string
              default: "STOR-X"

            operatingCurrent:
              type: string
              default: 50(mA)

            peakOperatingCurrent:
              type: string
              default: 50(mA)

            cleanUpTime:
              type: string
              default: 0(min)

        emailSettings:
          type: object

    SensorConfig:
      type: object

    Events:
      type: array
      items:
        type: object
        properties:

          comparison:
            type: string
            default: 'eq'
          action:
            type: string
          contact:
            type: string

    SatlanticSensor:
      allOf:
        - $ref: "https://graph.oceanics.io/api.yml#/components/schemas/Sensor"
        - type: object
          properties:
            name:
              type: string
            sn:
              type: string


    FTPSettings:
      server:
        description: FTP_SERVER
        type: string
      port:
        description: FTP_PORT
        type: integer
      user:
        description: FTP_USER
        type: string
      password:
        description: FTP_PASSWORD
        type: string
        format: password

    Auth:
      type: object
      properties:
        user:
          description: AUTHUSER
          type: string
        password:
          description: AUTHPW
          type: string
          format: password

    ScheduleConfig:
      type: object
      properties:
        port:
          description: SCHED_PORT
          type: integer
          default: 80
        path:
          description: PATHNAME
          type: string
          default: "/schedule"

    EmailConfig:
      type: object
      properties:
        domainNameServers:
          description: DOM_NAM_SERV1, DOM_NAM_SERV2
          type: array
          maxItems: 2
          items:
            type: string

        helo:
          description: HELO
          type: string
          default: "storx.storxmodem.com"

        server:
          description: SERVER
          type: string
          default: "23.92.25.145"

        webaddress:
          description: WEBADDRESS
          type: string
          default: "23.92.25.145"

        ip:
          description: IPVAL
          type: string
          default: "0.0.0.0"

        port:
          description: PORT
          type: integer
          default: 25

        from:
          description: STORXEMAIL
          type: string
          default: "storx.xxx@storxmodem.com"

        to:
          description: EMAIL
          type: string
          default: "lobodata@server.loboviz.com"

        user:
          description: USERID
          type: string
          default: ""

        password:
          description: PASSWD
          type: string
          format: password
          default: ""

        headercom:
          description: HEADERCOM
          type: integer
          default: 0

        datacom:
          description: DATACOM
          type: integer
          default: 0

        apn:
          description: APN
          type: string
          default: BROADBAND

