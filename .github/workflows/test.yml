name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
   
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      
      # Same setup as in docker-compose.yml
      neo4j:
        
        image: neo4j:4.2.5
        ports:
          - 7474:7474 # http
          - 7473:7473 # https
          - 7687:7687 # bolt

    steps:
      # Checkout repository using default action
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      # - name: Install pipenv
      #   run: |
      #     python -m pip install --upgrade pipenv wheel pip

      # - id: cache-pipenv
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.local/share/virtualenvs
      #     key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -e .
          pip install -r requirements.txt

      # - name: Install dependencies
      #   if: steps.cache-pipenv.outputs.cache-hit != 'true'
      #   run: |
      #     pipenv install --dev


      # - name: Pytest localhost
      #   run: |
      #     pipenv run test
      #   env:
      #     SPACES_SECRET: ${{ secrets.SPACES_SECRET }}
      #     SPACES_ACCESS_KEY: ${{ secrets.SPACES_ACCESS_KEY }}
      #     STORAGE_ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
      #     BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      #     SERVICE_NAME: ${{ secrets.SERVICE_NAME }}

      - name: Pytest localhost
        run: $(bathysphere test)
        env:
          NEO4J_ACCESS_KEY: n0t_passw0rd
          NEO4J_HOSTNAME: localhost

      # Uncomment to teardown and rebuild database with new secrets

      # - name: Pytest cloud
      #   run: $(bathysphere test)
      #   env:
      #     NEO4J_ACCESS_KEY: ${{ secrets.PROD_NEO4J_PASSWORD }}
      #     NEO4J_HOSTNAME: ${{ secrets.PROD_NEO4J_HOSTNAME }}
      
      - name: Generate docs
        run: pdoc --html --force --output-dir static/bathysphere/docs bathysphere
        env:
          NEO4J_ACCESS_KEY: n0t_passw0rd
          NEO4J_HOSTNAME: localhost

      - name: Commit files
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add
          git commit -m "Autogen Docs" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}